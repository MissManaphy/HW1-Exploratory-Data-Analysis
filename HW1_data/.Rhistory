x
print (x)
x <- 41
x <- 41
x <- 41
x <- 41
x <- 41
x <- 41
x
x
x
x
x
x
x
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R', echo=TRUE)
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R', echo=TRUE)
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R', echo=TRUE)
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R', echo=TRUE)
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R', echo=TRUE)
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R', echo=TRUE)
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R')
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R')
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R')
source('~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1-code.R')
help sum
help sum()
help(sum)
list.files()
vesselsSunk <- c(4,5,1)
barplot(vesselsSunk)
vesselsSunk <- c(4,5,1)
names(vesselsSunk) <- c("England", "France", "Norway")
barplot(vesselsSunk)
barplot(1:1000)
values <- -
values <- -
values <- -10:10
absolutes <- abs(values)
vesselsSunk <- c(4,5,1)
names(vesselsSunk) <- c("England", "France", "Norway")
barplot(vesselsSunk)
barplot(1:1000)
values <- -10:10
absolutes <- abs(values)
plot(values, absolutes)
matrix(0, 3, 4)
matrix(1, 3, 4)
values <- -10:10
absolutes <- abs(values)
plot(values, absolutes)
matrix(1, 3, 4)
plank <- 1:8
dim(plank) <- c(2, 4)
print(plank)
plank[2, 3]
plank[1, 4]
plank[2,]
plank[, 4]
plank[, 2:4]
contour(volcano)
persp(volcano, expand=0.2)
image(volcano)
image(volcano)
image(volcano)
contour(volcano)
persp(volcano, expand=0.2)
image(volcano)
plank <- 1:8
dim(plank) <- c(2, 4)
print(plank)
plank[2, 3]
plank[1, 4]
plank[2,]
plank[, 4]
plank[, 2:4]
contour(volcano)
persp(volcano, expand=0.2)
image(volcano)
limbs <- c(4, 3, 4, 3, 2, 4, 4, 4)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook', 'Scooter', 'Dan', 'Mikey', 'Blackbeard')
mean(limbs)
barplot(limbs)
barplot(limbs)
abline(h = mean(limbs))
limbs <- c(4, 3, 4, 3, 2, 4, 4, 14)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook',
'Scooter', 'Dan', 'Mikey', 'Davy Jones')
barplot(limbs)
abline(h = mean(limbs))
median(limbs)
abline(h = median(limbs))
pounds <- c(45000, 50000, 35000, 40000, 35000, 45000, 10000, 15000)
barplot(pounds)
meanValue <- mean(pounds)
abline(h = meanValue)
deviation <- sd(pounds)
deviation
abline(h = meanValue + deviation)
abline(h = meanValue - deviation)
weights <- c(300, 200, 100, 250, 150)
prices <- c(9000, 5000, 12000, 7500, 18000)
plot(weights, prices)
plot(weights, prices, pch=as.integer(types))
legend("topright", c("gems", "gold", "silver"), pch=1:3)
legend("topright", levels(types), pch=1:length(levels(types)))
treasure <- data.frame(weights, prices, types)
weights <- c(300, 200, 100, 250, 150)
prices <- c(9000, 5000, 12000, 7500, 18000)
plot(weights, prices)
list.files(./Desktop)
list.files(/Desktop)
list.files("./Desktop")
list.files("./Desktop/2017-2018/")
nyt1 <- read.csv("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data/nyt1.csv")
View(nyt1)
list.files("./Desktop/2017-2018/")
nyt1[, 2:4]
read.csv(nyt1.csv)
read.csv("nyt1.csv")
age <- nyt1[,1]
clicks <- nyt1[,4]
plot(age, clicks)
levels(age)
as.integer(age)
install.packages("Rcmdr")
library("Rcmdr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("Rcmdr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
nyt1[x,]
View(Dataset)
nyt1 <- (Dataset)
nyt1[x,]
nyt1[1,]
nyt1[2,]
nyt1[1,1]
nyt1[1,2]
nyt1[1,3]
nyt1[0,3]
nyt1[0,]
age <- nyt[,1]
clickRate <- nyt[,4]/nyt[,3]
hist (age, clickRate)
nyt1 <- Dataset
x <- 1
high <-0
low <- 0
age <- nyt[,1]
clickRate <- nyt[,4]/nyt[,3]
hist (age, clickRate)
age <- c(nyt[,1])
nyt1 <- Dataset
x <- 1
high <-0
low <- 0
age <- c(nyt[,1])
nyt1 <- Dataset
x <- 1
high <-0
low <- 0
age <- c(nyt1[,1])
clickRate <- nyt1[,4]/nyt1[,3]
hist (age, clickRate)
nyt1 <- Dataset
x <- 1
high <-0
low <- 0
age <- c(nyt1[,1])
clickRate <- c(nyt1[,4]/nyt1[,3])
hist (age, clickRate)
hist (clickRate)
age <- c(nyt1[,1])
clickRate <- c(nyt1[,4]/nyt1[,3])
hist (age)
age <- nyt1[which(nyt1$Age > 14)]
nyt1 <- Dataset
x <- 1
high <-0
high <-0
high <-0
low <- 0
age <- nyt1[which(nyt1$age > 14)]
hist (age)
age <- nyt1[which(nyt1$age > 14), ]
hist (age)
for (x in 1:8)
age <- nyt1[which(nyt1$Age > 14), ]
hist(age)
nyt1 <- Dataset
x <- 1
high <-0
low <- 0
age <- nyt1[which(nyt1$Age > 14), ]
hist(age)
age <- c(nyt1[which(nyt1$Age > 14), ])
hist(age)
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14), ])
hist(age)
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14), 1])
hist(age)
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
hist(age)
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
clickRate <- c((nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 3])/(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 4]))
hist(age, clickRate)
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
clickRate <- c((nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 3])/(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 4]))
agevclicks <- rbind(age, clickRate)
ggplot(agevclicks, aes(length, fill = veg)) + geom_density(alpha = 0.2)
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
clickRate <- c((nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 3])/(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 4]))
ageplot <- hist(age)
clickRatePlot <- hist(clickRate)
plot( ageplot, col=rgb(0,0,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
nyt1 <- Dataset
load("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data/nyt1.csv")
Dataset <- read.csv("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data/nyt1.csv")
View(Dataset)
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
clickRate <- c((nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 3])/(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 4]))
ageplot <- hist(age)
clickRatePlot <- hist(clickRate)
plot( ageplot, col=rgb(0,0,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
clickRate <- c((nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 3])/(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 4]))
hist(age)
ageplot <- hist(age)
clickRatePlot <- hist(clickRate)
plot( ageplot, col=rgb(0,0,1,1/4), xlim=c(0,10))  # first histogram
plot( ageplot, col=rgb(0,0,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
plot( ageplot, col=rgb(0,1,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
r
ageplot <- hist(age)
clickRatePlot <- hist(clickRate)
plot( ageplot, col=rgb(0,1,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
nyt1 <- Dataset
age <- c(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 1])
clickRate <- c((nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 3])/(nyt1[which(nyt1$Age > 14 & nyt1$Age < 95), 4]))
hist(age)
ageplot <- hist(age)
clickRatePlot <- hist(clickRate)
plot( ageplot, col=rgb(0,1,1,1/4), xlim=c(0,10), add=T)  # first histogram
plot( ageplot, col=rgb(0,1,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
hist(age)
ageplot <- hist(age)
clickRatePlot <- hist(clickRate)
plot( ageplot, col=rgb(0,1,1,1/4), xlim=c(0,10))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
student.salary  <- seq(10,2000)
student.salary  <- seq(10,200)
student.salary  <- seq(10,200, 0.5)
student.salary  <- seq(10,200, by = 2)
student.salary
which(student.salary > 100 & student.salary < 150)
student.salary(which(student.salary > 100 & student.salary < 150))
student.salary[which(student.salary > 100 & student.salary < 150)]
## Vector
v <- c(7,6,4,990)
length(v)
v+1
v*100
length(v)
sqrt(v)
i <-1:10
i <-1:10
i
(x)
(x)
(x)
(x)
i <-1:10
small.ints <- i<5
small.ints
i <-1:10
small.ints <- i<5
small.ints
which(small.ints)
#matricies
#as.matrix will turn a thing into a  matrix
#matrix(v, nrow = 3, ncol = 4)
v <- 1:12
matrix(v, 3, 4)
#matricies
#as.matrix will turn a thing into a  matrix
#matrix(v, nrow = 3, ncol = 4)
v <- 1:12
matrix(v, 3, 4)
matrix(v, 3, 4, byrow = T)
#matricies
#as.matrix will turn a thing into a  matrix
#matrix(v, nrow = 3, ncol = 4)
v <- 1:12
matrix(v, 3, 4)
m <- matrix(v, 3, 4, byrow = T)
dim(m)
head(m, 3)
head(m, 22)
head(m, 2)
tail(m, 1)
#subsetting
m[2,4]
m[2,]
m[,3]
plot( ageplot, col=rgb(0,1,1,1/4))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), xlim=c(0,10), add=T)  # second
plot( ageplot, col=rgb(0,1,1,1/4))  # first histogram
plot( clickRatePlot, col=rgb(1,0,0,1/4), add=T)  # second
getwd()
data <- read.csv(/Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data/nyt1.csv)
help("read.csv")
data <- read.csv(nyt1.csv)
data <- read.csv(file = nyt1.csv)
data <- read.csv('nyt1.csv')
setwd(/Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data)
setwd(Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data)
setwd('Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data'')
'asd'
setwd('Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data')
setwd('Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data')
setwd('Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis/HW1_data')
setwd('Users/sophiaanderson/Desktop/2017-2018/Second Semester/Intro to Data Science/labs/HW1-Exploratory-Data-Analysis')
setwd("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data")
setwd()
wd()
setwd("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data")
setwd("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data")
data <- read.csv(nyt1.csv)
data <- read.csv('nyt1.csv')
setwd("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data")
data <- read.csv('nyt1.csv')
#Reading in the data
setwd("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data")
data <- read.csv('nyt1.csv')
#catagorize
head(data)
data$agecat <- cut(data1$Age, c(-1,0,15,20,30,40,50,60,70,80,90))
#view
summary(data)
install.packages("doBy")
library("doBy")
#view
summary(data)
help(aes)
help(??aes)
help(??aes)()
help(??aes()
c
help(??aes())
help(aes())
#Reading in the data
setwd("~/Desktop/2017-2018/Second Semester/Intro to Data Science/Labs/HW1-Exploratory-Data-Analysis/HW1_data")
data <- read.csv('nyt1.csv')
#catagorize
head(data)
data$agecat <- cut(data1$Age, c(-1,0,15,20,30,40,50,60,70,80,90))
#view
summary(data)
#brackets
install.packages("doBy")
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data=data, FUN=siterange) #FUN = functions to be applied
#so only signed users have ages and genders
summaryBy(Gender+Signed_In+Impressions+Clicks~agecat, data = data)
#plot
install.packages("ggplot2")
library(ggplot2)
ggplot(data1, aes(x=agecat, y=impressions)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=agecat, y=impressions)) + geom_histogram(binwidth=1)
#catagorize
head(data)
data$agecat <- cut(data1$Age, c(-1,0,15,20,30,40,50,60,70,80,90))
#view
summary(data)
#brackets
install.packages("doBy")
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data=data, FUN=siterange) #FUN = functions to be applied
#so only signed users have ages and genders
summaryBy(Gender+Signed_In+Impressions+Clicks~agecat, data = data)
ggplot(data, aes(x=agecat, y=impressions)) + geom_histogram(binwidth=1)
data$agecat <- cut(data1$Age, c(-1,0,15,20,30,40,50,60,70,80,90))
data$agecat <- cut(data$Age, c(-1,0,15,20,30,40,50,60,70,80,90))
#view
summary(data)
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data=data, FUN=siterange) #FUN = functions to be applied
#so only signed users have ages and genders
summaryBy(Gender+Signed_In+Impressions+Clicks~agecat, data = data)
ggplot(data, aes(x=agecat, y=impressions)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=agecat, y=Impressions)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=agecat, y=Impressions, fill=agecat)) + geom_boxplot()
ggplot(data, aes(x=agecat, fill=agecat)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=Impressions, fill=agecat)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=agecat, y=Impressions, fill=agecat)) + geom_boxplot()
#create click thru rate
#we don't care about the clicks if there are no impressions
#if there are clicks with no impressions, my assumptions about this data are wrong
data$hasimps <- cut(data$Impressions, c(-Inf, 0, Inf))
summaryBy(Clicks~hasimps, data = data, FUN = siterange)
ggplot(subset(data, Impressions>0), aes(x=Clicks/Impressions, colour = agecat)) + geom_density()
ggplot(subset(data, Clicks>0), aes(x=Clicks/Impressions, colour = agecat)) + geom_density()
ggplot(subset(data, Clicks>0), aes(x=agecat, y=Clicks, fill = agecat)) + geom_density()
ggplot(subset(data, Clicks>0), aes(x=Clicks, colour = agecat)) + geom_density()
#create catagories
data$scode[data$Impressions==0] <- "NoImps"
data$scode[data$Impressions>0] <- "Imps"
data$scode[data$Clicks>0] <- "Clicks"
#Convert the column to a factor
data$scode <- factor(data$scode)
head(data)
#look at levels
clen <- function(x){c(length(x))}
etable<- summaryBy(Impressions~scode+Gender+agecat, data=data, FUN=clen)
ggplot(data, aes(x=Impressions, fill=agecat)) + geom_histogram(binwidth=1)
data$agecat <- cut(data$Age, c(0,15,20,30,40,50,60,70,80,90))
#view
summary(data)
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data=data, FUN=siterange) #FUN = functions to be applied
#so only signed users have ages and genders
summaryBy(Gender+Signed_In+Impressions+Clicks~agecat, data = data)
ggplot(data, aes(x=Impressions, fill=agecat)) + geom_histogram(binwidth=1)
#sort of a heat map identifying the number of impressions, age group, and then the
#number of people in that age group with that many impressions
ggplot(data, aes(x=agecat, y=Impressions, fill=agecat)) + geom_boxplot()
#create click thru rate
#we don't care about the clicks if there are no impressions
#if there are clicks with no impressions, my assumptions about this data are wrong
data$hasimps <- cut(data$Impressions, c(-Inf, 0, Inf))
summaryBy(Clicks~hasimps, data = data, FUN = siterange)
ggplot(subset(data, Impressions>0), aes(x=Clicks/Impressions, colour = agecat)) + geom_density()
ggplot(data, aes(x=agecat, y=Clicks/Impressions, fill=agecat)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=agecat, fill=Clicks/Impressions)) + geom_histogram(binwidth=1)
ggplot(data, aes(x=Clicks/Impressions, fill=agecat)) + geom_histogram(binwidth=1)
